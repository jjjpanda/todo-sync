app start

(O - origin, R - Remote)
(A - addition, M - modification, D - delete)

analyze local files (O)
pull list from cloud (R)

compare -> create delta 

[toOrigin.add]
[toOrigin.modify]
[toRemote.add]
[toRemote.modify]

add IDs of remote additions in origin

on (addition/modification/deletion) of local files -> add to `toRemote` list

on sync_rate amount of time
pull list from cloud (R)

compare -> create delta (using queued toRemote list)

[toOrigin.add]
[toOrigin.modify]
[toOrigin.delete] (UNSAFE)
[toRemote.add]
[toRemote.modify]
[toRemote.delete]

add IDs of remote additions in origin
reset toRemote list

let removeId = async (filePath) => {
    const file = app.vault.getAbstractFileByPath(filePath)
    const contents = await app.vault.read(file)
    const newContents = contents.replaceAll(/%%\[id:: [A-Za-z0-9-_=]*\]%%\s/g, "").replaceAll(/<!---[A-Za-z0-9-_=]*--->/g, "");
    await app.vault.modify(file, newContents)
}